1.简单工厂模式原理
  定义一个创建对象的类（工厂类），由这个类来封装实例化对象的行为。外部从工程类中获取相应实例。

适用于大量实现，某些，某批类。


2.工厂方法模式（重要）
  定义了一个创建对象的抽象方法，由子类决定要实例化的类。工厂方法模式将对象的实例化推迟到子类。

3.抽象工厂模式（重要）
   定义了一个接口用于创建相关或有依赖关系的对象族，而无需明确指定具体类。用一个接口引用去调用工厂方法，在主程序中创建具体的接口引用对象。
   有点类似于策略模式。

4.工厂模式关键点
  1.意义：把对象的实例化这个动作提前出来。扩展性强，可维护性高。
  
  2.三种工厂模式
 
  3.依赖抽象原则：变量不要持有具体类的引用。
                  不要让类继承自具体类，要继承自抽象类或接口。
                  不要覆盖类中已实现的方法。